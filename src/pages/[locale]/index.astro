---
import { getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import BlogCard from "../../components/BlogCard.astro";
import AuthorSidebar from "../../components/AuthorSidebar.astro";
import Footer from "../../components/Footer.astro";
import Header from "../../components/Header.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../../consts";
import { useTranslations, languages, formatDate } from "../../lib/i18n";

export async function getStaticPaths() {
    return Object.keys(languages).map((locale) => ({
        params: { locale },
    }));
}

const { locale } = Astro.params;
const lang = (locale as keyof typeof languages) || "zh-cn";
const t = useTranslations(lang);

// 获取所有博客文章并按日期降序排列
const posts = (await getCollection("blog")).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

// 统计标签数据
const tagCounts = new Map<string, number>();
posts.forEach((post) => {
    post.data.tags?.forEach((tag) => {
        tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);
    });
});

// 转换为数组并按使用次数排序
const popularTags = Array.from(tagCounts.entries())
    .map(([tag, count]) => ({ tag, count }))
    .sort((a, b) => b.count - a.count);
---

<!doctype html>
<html lang={lang}>
    <head>
        <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    </head>
    <body>
        <Header />
        <main class="container mx-auto px-4 py-8">
            <!-- 主要内容区域 - 左右分栏布局 -->
            <div class="grid lg:grid-cols-4 gap-8 max-w-7xl mx-auto">
                <!-- 左侧主要内容 - 时间轴 -->
                <section class="lg:col-span-3">
                    <div class="timeline-container">
                        {
                            posts.map((post, index) => (
                                <article class="timeline-item">
                                    <div class="timeline-date-section">
                                        <div class="timeline-date">
                                            {formatDate(
                                                post.data.pubDate,
                                                lang,
                                            )}
                                        </div>
                                        <div class="timeline-marker">
                                            <div class="timeline-dot" />
                                            {index < posts.length - 1 && (
                                                <div class="timeline-line" />
                                            )}
                                        </div>
                                    </div>
                                    <div class="timeline-content">
                                        <BlogCard post={post} lang={lang} />
                                    </div>
                                </article>
                            ))
                        }
                    </div>
                </section>

                <!-- 右侧侧边栏 -->
                <aside class="lg:col-span-1">
                    <AuthorSidebar
                        lang={lang}
                        totalPosts={posts.length}
                        popularTags={popularTags}
                    />
                </aside>
            </div>
        </main>
        <Footer />

        <style>
            .timeline-container {
                position: relative;
            }

            .timeline-item {
                position: relative;
                display: flex;
                margin-bottom: 2rem;
            }

            .timeline-item:last-child {
                margin-bottom: 0;
            }

            .timeline-date-section {
                position: relative;
                flex-shrink: 0;
                width: 6rem;
                display: flex;
                flex-direction: column;
                align-items: center;
            }

            .timeline-date {
                font-size: 0.75rem;
                color: hsl(var(--muted-foreground));
                font-weight: 500;
                text-align: center;
                margin-bottom: 0.5rem;
                padding: 0.25rem 0.5rem;
                /* background: hsl(var(--surface)); */
                /* border-radius: 0.375rem; */
                /* border: 1px solid hsl(var(--border)); */
                white-space: nowrap;
                min-width: 5rem;
            }

            .timeline-marker {
                position: relative;
                display: flex;
                flex-direction: column;
                align-items: center;
            }

            .timeline-dot {
                width: 1rem;
                height: 1rem;
                background: hsl(var(--primary));
                border-radius: 50%;
                border: 3px solid hsl(var(--background));
                box-shadow: 0 0 0 3px hsl(var(--border));
                z-index: 2;
            }

            .timeline-line {
                width: 2px;
                flex: 1;
                background: hsl(var(--border));
                margin-top: 0.5rem;
                min-height: 8rem;
            }

            .timeline-content {
                flex: 1;
                margin-left: 1rem;
            }

            /* 响应式设计 */
            @media (max-width: 768px) {
                .timeline-date-section {
                    width: 1.5rem;
                }

                .timeline-date {
                    font-size: 0.625rem;
                    padding: 0.125rem 0.25rem;
                    min-width: 4rem;
                }

                .timeline-dot {
                    width: 0.75rem;
                    height: 0.75rem;
                }

                .timeline-content {
                    margin-left: 0.5rem;
                }
            }
        </style>
    </body>
</html>
