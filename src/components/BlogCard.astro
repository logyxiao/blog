---
interface Props {
    post: {
        id: string;
        data: {
            title: string;
            description: string;
            pubDate: Date;
            heroImage?: any;
            tags: string[];
        };
        body?: string;
    };
    lang: "zh-cn" | "en";
}

const { post, lang } = Astro.props;

// 获取文章摘要（剔除markdown格式，生成自然的文本摘要）
function getExcerpt(content: string, maxLength: number = 200): string {
    // 先按行分割并过滤空行
    const lines = content
        .split("\n")
        .filter((line) => line.trim() !== "")
        .map((line) => {
            // 剔除markdown格式符号
            return line
                // 移除标题符号 # ## ### 等
                .replace(/^#{1,6}\s+/, '')
                // 移除代码块标记 ```
                .replace(/^```[\w]*/, '')
                .replace(/^```$/, '')
                // 移除行内代码标记 `code`
                .replace(/`([^`]+)`/g, '$1')
                // 移除粗体 **text** 或 __text__
                .replace(/\*\*([^*]+)\*\*/g, '$1')
                .replace(/__([^_]+)__/g, '$1')
                // 移除斜体 *text* 或 _text_
                .replace(/\*([^*]+)\*/g, '$1')
                .replace(/_([^_]+)_/g, '$1')
                // 移除链接 [text](url)
                .replace(/\[([^\]]+)\]\([^)]+\)/g, '$1')
                // 移除图片 ![alt](url)
                .replace(/!\[([^\]]*)\]\([^)]+\)/g, '$1')
                // 移除引用符号 >
                .replace(/^>\s*/, '')
                // 移除列表符号 - * +
                .replace(/^[-*+]\s+/, '')
                // 移除有序列表数字
                .replace(/^\d+\.\s+/, '')
                // 移除HTML标签
                .replace(/<[^>]*>/g, '')
                // 移除多余空格并清理
                .replace(/\s+/g, ' ')
                .trim();
        })
        .filter((line) => line.length > 0); // 过滤掉空行
    
    // 合并所有行为一段文本
    const fullText = lines.join(' ');
    
    // 如果文本长度超过限制，截断并添加省略号
    if (fullText.length > maxLength) {
        const truncated = fullText.substring(0, maxLength);
        // 找到最后一个完整的词
        const lastSpaceIndex = truncated.lastIndexOf(' ');
        if (lastSpaceIndex > maxLength * 0.8) {
            return truncated.substring(0, lastSpaceIndex) + '...';
        }
        return truncated + '...';
    }
    
    return fullText;
}

const excerpt = getExcerpt(post.body || "");
---

<article
    class="group transition-all duration-normal border-card-border h-full flex flex-col overflow-hidden blog-card-mobile paper-card"
>
    <a href={`/blog/${post.id}/`} class="flex flex-col h-full">
        {/* 图片区域 */}
        <!-- {
            post.data.heroImage && (
                <div class="w-full aspect-[16/9] sm:aspect-[16/8] overflow-hidden">
                    <img
                        src={post.data.heroImage.src}
                        alt={post.data.title}
                        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-slow"
                    />
                </div>
            )
        } -->

        {/* 文字内容区域 */}
        <div class="flex-1 flex flex-col">
            {/* 标题区域 */}
            <header class="px-3 py-3 sm:px-4 sm:py-4 pb-2">
                <h3
                    class="text-base sm:text-lg font-semibold text-foreground group-hover:text-primary transition-colors duration-fast line-clamp-2 leading-tight handwriting"
                >
                    {post.data.title}
                </h3>
            </header>

            {/* 内容区域 */}
            <div class="px-3 sm:px-4 pt-0 pb-3 sm:pb-4 flex-1 flex flex-col">
                {/* 摘要文字 */}
                <div
                    class="text-muted-foreground text-sm leading-relaxed mb-3 sm:mb-4 flex-1"
                >
                    <p class="line-clamp-4">
                        {excerpt}
                    </p>
                </div>

                {/* 底部信息区域 */}
                <div class="mt-auto space-y-2.5">
                    {/* 日期和阅读时间 */}
                    <div
                        class="flex items-center text-xs text-muted-foreground space-x-3 justify-between"
                    >
                        <div>
                            {/* 标签 */}
                            {
                                post.data.tags && post.data.tags.length > 0 && (
                                    <div class="flex flex-wrap gap-1.5">
                                        {post.data.tags
                                            .slice(0, 4)
                                            .map((tag) => (
                                                <span class="px-2 py-0.5 text-xs bg-surface rounded text-muted-foreground truncate max-w-[100px]">
                                                    #{tag}
                                                </span>
                                            ))}
                                        {post.data.tags.length > 3 && (
                                            <span class="px-2 py-0.5 text-xs bg-surface rounded text-muted-foreground">
                                                +{post.data.tags.length - 3}
                                            </span>
                                        )}
                                    </div>
                                )
                            }
                          
                        </div>
                        <div>
                              <!-- 时间 -->
                            {
                                post.data.pubDate && (
                                    <div class="mt-1 text-xs text-muted-foreground">
                                        {new Date(post.data.pubDate).toLocaleDateString(lang, {
                                            year: "numeric",
                                            month: "short",
                                            day: "numeric",
                                        })}
                                    </div>
                                )
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </a>
</article>

<style>
    .blog-card-mobile {
        @apply rounded-lg border;
    }

    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .line-clamp-4 {
        display: -webkit-box;
        -webkit-line-clamp: 4;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .duration-fast {
        transition-duration: 150ms;
    }

    .duration-normal {
        transition-duration: 300ms;
    }

    .duration-slow {
        transition-duration: 500ms;
    }
</style>
