---
import { Image } from "astro:assets";

interface Props {
    movie: {
        id: string;
        data: {
            title: string;
            year: number;
            genre: string[];
            myRating: number;
            doubanRating: number;
            review: string;
            director: string;
            duration: string;
            category:
                | "Movie"
                | "TV Series"
                | "Documentary"
                | "Variety Show"
                | "Animation"
                | "Short Film";
            poster: any; // 支持本地图片对象或字符串URL
            watchedDate: Date;
            tags: string[];
        };
        body?: string;
    };
    lang: string;
}

const { movie, lang } = Astro.props;

// 判断是否为本地图片
const isLocalImage =
    typeof movie.data.poster === "object" && movie.data.poster.src;

// 星级评分组件
function generateStars(rating: number) {
    const fullStars = Math.floor(rating / 2);
    const hasHalfStar = rating % 2 >= 1;
    const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);

    return {
        full: Array(fullStars).fill(0),
        half: hasHalfStar ? [0] : [],
        empty: Array(emptyStars).fill(0),
    };
}

const stars = generateStars(movie.data.myRating);

// 类别翻译
const categoryMap = {
    Movie: lang === "zh-cn" ? "电影" : "Movie",
    "TV Series": lang === "zh-cn" ? "电视剧" : "TV Series",
    Documentary: lang === "zh-cn" ? "纪录片" : "Documentary",
    "Variety Show": lang === "zh-cn" ? "综艺" : "Variety Show",
    Animation: lang === "zh-cn" ? "动漫" : "Animation",
    "Short Film": lang === "zh-cn" ? "短片" : "Short Film",
};

const formatDate = (date: Date) => {
    return lang === "zh-cn"
        ? `${date.getFullYear()}年${date.getMonth() + 1}月${date.getDate()}日`
        : date.toLocaleDateString("en-US", {
              year: "numeric",
              month: "short",
              day: "numeric",
          });
};
---

<div
    class="paper-card overflow-hidden group hover:shadow-lg transition-all duration-300"
>
    <div class="flex gap-4 p-4">
        <!-- 左侧海报 -->
        <div class="flex-shrink-0">
            {
                isLocalImage ? (
                    <Image
                        src={movie.data.poster}
                        alt={`${movie.data.title} poster`}
                        width={96}
                        height={128}
                        class="w-20 h-28 sm:w-24 sm:h-32 object-cover rounded-lg border border-border"
                        loading="lazy"
                    />
                ) : (
                    <img
                        src={movie.data.poster}
                        alt={`${movie.data.title} poster`}
                        class="w-20 h-28 sm:w-24 sm:h-32 object-cover rounded-lg border border-border"
                        loading="lazy"
                    />
                )
            }
        </div>

        <!-- 右侧信息 -->
        <div class="flex-1 min-w-0 space-y-2">
            <!-- 标题和年份 -->
            <div class="flex items-start justify-between gap-2">
                <h3
                    class="text-lg font-bold text-foreground line-clamp-2 group-hover:text-primary transition-colors"
                >
                    {movie.data.title}
                </h3>
                <span class="text-sm text-muted-foreground flex-shrink-0">
                    {movie.data.year}
                </span>
            </div>

            <!-- 类别和时长 -->
            <div class="flex items-center gap-2 text-sm text-muted-foreground">
                <span
                    class="px-2 py-1 bg-surface rounded text-xs border border-border"
                >
                    {categoryMap[movie.data.category]}
                </span>
                <span>•</span>
                <span>{movie.data.duration}</span>
                <span>•</span>
                <span>{movie.data.director}</span>
            </div>

            <!-- 类型标签 -->
            <div class="flex flex-wrap gap-1">
                {
                    movie.data.genre
                        .slice(0, 3)
                        .map((g) => (
                            <span class="px-2 py-0.5 text-xs bg-surface text-muted-foreground rounded border border-border">
                                {g}
                            </span>
                        ))
                }
                {
                    movie.data.genre.length > 3 && (
                        <span class="px-2 py-0.5 text-xs bg-surface text-muted-foreground rounded border border-border">
                            +{movie.data.genre.length - 3}
                        </span>
                    )
                }
            </div>

            <!-- 评分区域 -->
            <div class="flex items-center justify-between">
                <div class="flex items-center gap-3">
                    <!-- 我的评分 -->
                    <div class="flex items-center gap-1">
                        <span class="text-xs text-muted-foreground"
                            >{
                                lang === "zh-cn" ? "我的评分" : "My Rating"
                            }:</span
                        >
                        <div class="flex items-center">
                            {
                                stars.full.map(() => (
                                    <svg
                                        class="w-3 h-3 text-yellow-500"
                                        fill="currentColor"
                                        viewBox="0 0 20 20"
                                    >
                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                    </svg>
                                ))
                            }
                            {
                                stars.half.map(() => (
                                    <svg
                                        class="w-3 h-3 text-yellow-500"
                                        fill="currentColor"
                                        viewBox="0 0 20 20"
                                    >
                                        <defs>
                                            <linearGradient id="half">
                                                <stop
                                                    offset="50%"
                                                    stop-color="currentColor"
                                                />
                                                <stop
                                                    offset="50%"
                                                    stop-color="transparent"
                                                />
                                            </linearGradient>
                                        </defs>
                                        <path
                                            fill="url(#half)"
                                            d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"
                                        />
                                    </svg>
                                ))
                            }
                            {
                                stars.empty.map(() => (
                                    <svg
                                        class="w-3 h-3 text-gray-300"
                                        fill="currentColor"
                                        viewBox="0 0 20 20"
                                    >
                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                    </svg>
                                ))
                            }
                        </div>
                        <span class="text-sm font-medium text-foreground"
                            >{movie.data.myRating.toFixed(1)}</span
                        >
                    </div>

                    <!-- 豆瓣评分 -->
                    <div class="flex items-center gap-1">
                        <span class="text-xs text-muted-foreground"
                            >{lang === "zh-cn" ? "豆瓣" : "Douban"}:</span
                        >
                        <span class="text-sm font-medium text-yellow-600"
                            >{movie.data.doubanRating.toFixed(1)}</span
                        >
                    </div>
                </div>

                <!-- 观看日期 -->
                <span class="text-xs text-muted-foreground">
                    {formatDate(movie.data.watchedDate)}
                </span>
            </div>

            <!-- 简短评价 -->
            <p
                class="text-sm text-muted-foreground line-clamp-2 leading-relaxed"
            >
                {movie.data.review}
            </p>

            <!-- 标签 -->
            {
                movie.data.tags && movie.data.tags.length > 0 && (
                    <div class="flex flex-wrap gap-1">
                        {movie.data.tags.slice(0, 3).map((tag) => (
                            <span class="px-2 py-0.5 text-xs bg-primary/10 text-primary rounded">
                                #{tag}
                            </span>
                        ))}
                        {movie.data.tags.length > 3 && (
                            <span class="px-2 py-0.5 text-xs bg-primary/10 text-primary rounded">
                                +{movie.data.tags.length - 3}
                            </span>
                        )}
                    </div>
                )
            }
        </div>
    </div>
</div>

<style>
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>
